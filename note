CRM项目: 客户关系管理系统
注意几点：
1  code: 用于前端用不用显示添加，删除，编辑按钮
2  权限多时需要分组（权限组）
3  需要是否的菜单的标记（is_menu）
4  如上三条就意味着权限表多出3列（code, groupID, is_menu）


rbac: 基于角色的权限管理
	- 找到用户所属角色
	- 找到角色所属权限
  - 权限去重

中间件可以拦截所有请求： 基于特性可以做IP黑名单、登录认证
权限: 根据含有正则表达式的URL分配权限
操作： 通过配置文件进行页面定制展示

blank=True
null=True

1  权限表（含有正则表达式）permission
   
id    url                                   title                   code
1     



需要在后台添加访问页： 如index
中间件做认证和授权
    考虑几点：
    1 没有登录就是说没有session,是不让访问的
    2 请求的URL 和用户权限列表中的URL是否匹配
    

rematch用法
	用法一：添加黑白名单/login/
		import re
		current_url = request.path_info
		valid_page_list = [
		"^/login/$",
		"^admin.*",
		]
		for valid in valid_page_list:
		    if rematch(valid, current_url):
		       #return None
		       print(current_url)

	re.match()用法二：
		注意其中^{0}$对匹配的影响

中间件codes的用法
	中间件加入request.permission_codes = codes用于前端直接运用
	{% if "del" in request.permission_codes %}
	    <a>删除</a>
	{% endif %}





自动生成菜单时，访问URL的不同，显示的菜单展开也是不同的.



